name: Build Pipeline
on:
  push:
    branches:
      - "main"
    paths:
      - "**/*"
      - "!**/README.md"
  pull_request:
    branches:
      - "main"
    paths:
      - "**/*"
      - "!**/README.md"
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: ./

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
      - name: Install dependencies
        run: |
          npm ci --prefix frontend
      - name: Build frontend
        run: |
          npm run build --prefix frontend

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Run tests
        run: |
          cd frontend
          npm run test
      - name: Run Security Scans
        run: ./security-script.sh
        continue-on-error: true

  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Run tests
        run: |
          cd backend
          npm run test
        continue-on-error: true
      - name: Run Security Scans
        run: ./security-script.sh

  push_to_registry:
    needs: [build-frontend, test-frontend, test-backend]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Frontend and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.FRONTEND_IMAGE }}/v1
          
      - name: Build backend and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.BACKEND_IMAGE }}/v1
